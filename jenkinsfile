git clone https://github.com/<your-username>/githubActionsLabTaskFolder.git
cd githubActionsLabTaskFolder
npm install
npm test
mkdir -p .github/workflows
git add .github/workflows/ci.yml
git commit -m "ci: add GitHub Actions workflow to run tests"
git push origin main

////////////////////////////////
name: Continuous Integration

# When to run this workflow
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# Define the jobs to run
jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up Node.js environment (if project uses Node)
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      # Step 3: Install dependencies
      - name: Install dependencies
        run: npm install

      # Step 4: Run linter (checks code style)
      - name: Run Linter
        run: npm run lint --if-present

      # Step 5: Run tests
      - name: Run Tests
        run: npm test --if-present

      # Step 6: Upload test results (optional)
      - name: Upload test report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: test-results/



//////////////////////////////////////////////////////////////////
 1. Install PM2
sudo npm install -g pm2

# 2. Clone Node.js project from GitHub
git clone https://github.com/heroku/node-js-sample.git
cd node-js-sample

# 3. Install dependencies
npm install

# 4. Test locally
npm start

# 5. Run with PM2
pm2 start index.js --name node-sample

# 6. View running processes
pm2 list

# 7. Enable PM2 auto-start on reboot
pm2 startup
pm2 save

///////////////////////////////////////////
# 1. Install Apache and Nginx
sudo apt install apache2 nginx -y

# 2. Clone React/Vite app
cd ~
git clone https://github.com/vitejs/vite.git react-app
cd react-app

# 3. Install dependencies and build
npm install
npm run build

# 4. Deploy with Apache
sudo rm -rf /var/www/html/*
sudo cp -r dist/* /var/www/html/
sudo systemctl restart apache2
# Visit http://localhost

# 5. Deploy with Nginx (optional)
sudo rm -rf /var/www/html/*
sudo cp -r dist/* /var/www/html/
sudo nano /etc/nginx/sites-available/default
# Replace contents with:
# server {
#     listen 80 default_server;
#     root /var/www/html;
#     index index.html;
#     server_name _;
#     location / {
#         try_files $uri /index.html;
#     }
# }
sudo systemctl restart nginx
# Visit http://localhost
